name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        volumes:
          - data:/data

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Await MongoDB
        run: |
          for i in {1..30}; do
            nc -z localhost 27017 && echo "MongoDB is up!" && exit 0
            echo "Waiting for MongoDB..."
            sleep 2
          done
          echo "MongoDB did not start in time" && exit 1

      - name: Build with Maven
        run: mvn -B clean install -DskipTests

#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    services:
#      mongodb:
#        image: mongo
#        ports:
#          - 27017:27017
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Await MongoDB
#        run: |
#          for i in {1..30}; do
#            nc -z localhost 27017 && echo "MongoDB is up!" && exit 0
#            echo "Waiting for MongoDB..."
#            sleep 2
#          done
#          echo "MongoDB did not start in time" && exit 1
#
#      - name: Run tests with Maven
#        run: mvn test
#        env:
#          MONGO_URI: mongodb://localhost:27017/rtvs

  fake-deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Fake Deploy
        run: |
          echo "Starting fake deploy..."
          echo "Pulling Docker image your-repo/your-app:${{ github.sha }}"
          echo "Stopping existing Docker container..."
          echo "Removing existing Docker container..."
          echo "Starting new Docker container with image your-repo/your-app:${{ github.sha }}"
          echo "Deployment complete!"
